<div style='margin: 0px; padding: 0px; font-family: Consolas; width: auto'><style type='text/css'>.fs-str {color: #d14;} .fs-key {color: blue;} .fs-com {color: green; font-style: italic;}</style><table><tr><td style='padding: 5px; vertical-align: top; border-right: 1px solid #ececec; color: rgb(160, 160, 160);'><span>1</span><br /><span>2</span><br /><span>3</span><br /><span>4</span><br /><span>5</span><br /><span>6</span><br /><span>7</span><br /><span>8</span><br /><span>9</span><br /><span>10</span><br /><span>11</span><br /><span>12</span><br /><span>13</span><br /><span>14</span><br /><span>15</span><br /><span>16</span><br /><span>17</span><br /><span>18</span><br /><span>19</span><br /><span>20</span><br /><span>21</span><br /><span>22</span><br /><span>23</span><br /><span>24</span><br /><span>25</span><br /><span>26</span><br /><span>27</span><br /><span>28</span><br /><span>29</span><br /><span>30</span><br /><span>31</span><br /><span>32</span><br /><span>33</span><br /><span>34</span><br /><span>35</span><br /><span>36</span><br /><span>37</span><br /><span>38</span><br /><span>39</span><br /><span>40</span><br /><span>41</span><br /><span>42</span><br /><span>43</span><br /><span>44</span><br /><span>45</span><br /><span>46</span><br /><span>47</span><br /><span>48</span><br /><span>49</span><br /><span>50</span><br /><span>51</span><br /><span>52</span><br /><span>53</span><br /><span>54</span><br /><span>55</span><br /><span>56</span><br /><span>57</span><br /><span>58</span><br /><span>59</span><br /><span>60</span><br /><span>61</span><br /><span>62</span><br /><span>63</span><br /><span>64</span><br /><span>65</span><br /><span>66</span><br /><span>67</span><br /><span>68</span><br /><span>69</span><br /><span>70</span><br /><span>71</span><br /><span>72</span><br /><span>73</span><br /><span>74</span><br /><span>75</span><br /><span>76</span><br /><span>77</span><br /><span>78</span><br /><span>79</span><br /><span>80</span><br /><span>81</span><br /><span>82</span><br /><span>83</span><br /><span>84</span><br /><span>85</span><br /><span>86</span><br /><span>87</span><br /><span>88</span><br /><span>89</span><br /><span>90</span><br /><span>91</span><br /><span>92</span><br /><span>93</span><br /><span>94</span><br /><span>95</span><br /><span>96</span><br /><span>97</span></td><td style='vertical-align: top; padding: 5px;'><pre style='margin: 0px; background-color: white; border: none; padding: 0px; font-size: 14px; white-space: pre;'><span class='fs-key'>module </span>TwitterWidget =
    <span class='fs-key'>open </span>IntelliFactory.WebSharper

    <span class='fs-com'>// Server-side code.</span>
    <span class='fs-key'>module </span><span class='fs-key'>private </span>Server =
        <span class='fs-key'>open </span>TweetSharp
        <span class='fs-key'>open </span>System

        <span class='fs-com'>// Twitter authentication.</span>
        <span class='fs-key'>let </span>ts = TwitterService(Secret.consKey, Secret.consSecret)
        ts.AuthenticateWith(Secret.token, Secret.tokenSecret)

        <span class='fs-com'>// Set search options.</span>
        <span class='fs-key'>let </span>options = SearchOptions()
        options.Q &lt;- <span class='fs-str'>"#fsharp"</span>
        options.Count &lt;- Nullable 100

        <span class='fs-com'>// Searches the latest 100 tweets tagged "fsharp".</span>
        [&lt;Rpc&gt;]
        <span class='fs-key'>let </span>fetchTweets() =
            async {
                <span class='fs-key'>let </span>statuses =
                    ts.Search(options).Statuses
                    |&gt; Seq.toList
                    |&gt; List.map (<span class='fs-key'>fun </span>status -&gt;
                        status.Author.ScreenName,
                        status.Id.ToString(),
                        status.Author.ProfileImageUrl,
                        status.User.Name,
                        status.TextAsHtml,
                        status.CreatedDate.ToLongDateString())
                <span class='fs-key'>return </span>statuses }

    <span class='fs-com'>// Client-side code.</span>
    [&lt;JavaScript&gt;]
    <span class='fs-key'>module </span><span class='fs-key'>private </span>Client =
        <span class='fs-key'>open </span>IntelliFactory.WebSharper.Html
        <span class='fs-key'>open </span>IntelliFactory.WebSharper.JQuery

        <span class='fs-com'>// Creates an &lt;li&gt; containing the details of a tweet (screen name, creation date...).</span>
        <span class='fs-key'>let </span>li (screenName, tweetId, profileImage, fullName, tweetHtml, creationDate) =
            <span class='fs-key'>let </span>profileLink = <span class='fs-str'>"https://twitter.com/"</span> + screenName
            <span class='fs-key'>let </span>replyLink = <span class='fs-str'>"https://twitter.com/intent/tweet?in_reply_to="</span> + tweetId
            <span class='fs-key'>let </span>retweetLink = <span class='fs-str'>"https://twitter.com/intent/retweet?tweet_id="</span>  + tweetId
            <span class='fs-key'>let </span>favoriteLink = <span class='fs-str'>"https://twitter.com/intent/favorite?tweet_id="</span> + tweetId
            <span class='fs-key'>let </span>p = P []
            p.Html &lt;- tweetHtml
            LI [Attr.Class <span class='fs-str'>"tweet"</span>] -&lt; [
                Div [
                    A [HRef profileLink; Attr.Class <span class='fs-str'>"profile-link"</span>; Attr.Target <span class='fs-str'>"_blank"</span>] -&lt; [
                        Img [Src profileImage; Alt fullName; Attr.Class <span class='fs-str'>"avatar"</span>]
                        Strong [Text fullName]
                    ] -&lt; [Text &lt;| <span class='fs-str'>" @"</span> + screenName]
                    Br []
                    Small [Text creationDate]
                    p
                    Div [Attr.Class <span class='fs-str'>"tweet-actions"</span>] -&lt; [
                        A [HRef replyLink; Attr.Class <span class='fs-str'>"tweet-action"</span>; Attr.Style <span class='fs-str'>"margin-right: 5px;"</span>] -&lt; [Text <span class='fs-str'>"Reply"</span>]
                        A [HRef retweetLink; Attr.Class <span class='fs-str'>"tweet-action"</span>; Attr.Style <span class='fs-str'>"margin-right: 5px;"</span>] -&lt; [Text <span class='fs-str'>"Retweet"</span>]
                        A [HRef favoriteLink; Attr.Class <span class='fs-str'>"tweet-action"</span>] -&lt; [Text <span class='fs-str'>"Favorite"</span>]
                    ]
                ]
            ]

        <span class='fs-com'>// Toggles the visibility of the reply, retweet and favorite links.</span>
        <span class='fs-key'>let </span>toggleActionsVisibility() =
            <span class='fs-key'>let </span>jquery = JQuery.Of <span class='fs-str'>".tweet"</span>
            jquery.Mouseenter(<span class='fs-key'>fun </span>x _ -&gt; JQuery.Of(<span class='fs-str'>".tweet-actions"</span>, x).Css(<span class='fs-str'>"visibility"</span>, <span class='fs-str'>"visible"</span>).Ignore).Ignore
            jquery.Mouseleave(<span class='fs-key'>fun </span>x _ -&gt; JQuery.Of(<span class='fs-str'>".tweet-actions"</span>, x).Css(<span class='fs-str'>"visibility"</span>, <span class='fs-str'>"hidden"</span>).Ignore).Ignore

        <span class='fs-com'>// Opens the reply, retweet and favorite links in a modal dialog.</span>
        <span class='fs-key'>let </span>handleTweetActions() =
            <span class='fs-key'>let </span>jquery = JQuery.Of <span class='fs-str'>"a.tweet-action"</span>
            jquery.Click(<span class='fs-key'>fun </span>elt event -&gt;
                <span class='fs-key'>do </span>event.PreventDefault()
                <span class='fs-key'>let </span>href = elt.GetAttribute <span class='fs-str'>"href"</span>
                Html5.Window.Self.ShowModalDialog href |&gt; ignore).Ignore

        <span class='fs-com'>// Appends a &lt;div&gt; containing a list of tweets to the DOM.</span>
        <span class='fs-key'>let </span>main() =
            Div [Id <span class='fs-str'>"tweets"</span>; Attr.Class <span class='fs-str'>"span6"</span>]
            |&gt;! OnAfterRender (<span class='fs-key'>fun </span>elt -&gt;
                async {
                    <span class='fs-key'>let! </span>tweets = Server.fetchTweets()
                    <span class='fs-key'>let </span>ul = UL [Attr.Style <span class='fs-str'>"list-style-type: none;"</span>]
                    tweets |&gt; List.iter (<span class='fs-key'>fun </span>tweet -&gt; <span class='fs-key'>do </span>ul.Append (li tweet))
                    <span class='fs-key'>do </span>elt.Append ul
                    <span class='fs-key'>do </span>toggleActionsVisibility()
                    <span class='fs-key'>do </span>handleTweetActions() }
                |&gt; Async.Start)

    <span class='fs-com'>// A control for serving the main pagelet.</span>
    <span class='fs-key'>type </span>Control() =
        <span class='fs-key'>inherit </span>Web.Control()

        [&lt;JavaScript&gt;]
        <span class='fs-key'>override </span>this.Body = Client.main() :&gt; _</pre></td></tr></table></div>